# Generated by Django 3.2.3 on 2021-07-07 06:10

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('batch_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time batch information was first sent to this server.')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='Time batch information was last sent to this server.')),
            ],
        ),
        migrations.CreateModel(
            name='Batch_IMU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_number', models.PositiveIntegerField(help_text='The file number in the batch')),
                ('data_version', models.PositiveIntegerField(help_text='The data version of the data, in case needed by processing programs.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time batch information was sent to this server.')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.batch')),
            ],
        ),
        migrations.CreateModel(
            name='Batch_Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started', models.BooleanField(default=False, help_text='Flag denoting whether the job has been started.')),
                ('finished', models.BooleanField(default=False, help_text='Flag denoting whether the job has terminated.')),
                ('time_started', models.DateTimeField(default=None, help_text='The start time of the job, should be in UTC time.', null=True)),
                ('succeeded', models.BooleanField(default=False, help_text='Flag denoting whether the job was successful or not.')),
                ('tries', models.PositiveSmallIntegerField(default=0, help_text='The number of times the job has been attempted')),
            ],
        ),
        migrations.CreateModel(
            name='Batch_Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_photos', models.PositiveIntegerField(help_text='Number of photos in the batch.')),
                ('file_number', models.PositiveIntegerField(help_text='The file number in the batch')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time batch information was sent to this server.')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.batch')),
            ],
        ),
        migrations.CreateModel(
            name='Job_DataType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(choices=[('PHOTO', 'Photo'), ('IMU', 'IMU'), ('PH/IMU', 'Photo_AND_IMU')], help_text='The type of data that a batch will run.', max_length=6)),
                ('active', models.BooleanField(default=True, help_text='Whether or not the data type is actively being recorded by Mobilized Sensors')),
            ],
        ),
        migrations.CreateModel(
            name='Job_Definition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.job_datatype')),
                ('parent_job', models.ForeignKey(default=None, help_text='Possible parent job', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.job_definition')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('namespace', models.CharField(blank=True, help_text='Kubernetes namespace.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Processed_Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.batch_job')),
                ('batch_photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.batch_photo')),
            ],
        ),
        migrations.CreateModel(
            name='Processed_IMU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_imu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.batch_imu')),
                ('batch_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.batch_job')),
            ],
        ),
        migrations.CreateModel(
            name='Job_Spec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_environment', models.CharField(choices=[('AWS', 'Amazon'), ('AZ', 'Azure')], help_text='The environment which the job should be run in', max_length=3)),
                ('container_image', models.TextField(help_text='The container linked to this job spec')),
                ('priority', models.PositiveSmallIntegerField(default=0, help_text='Optional priority for potentially ordering jobs')),
                ('active', models.BooleanField(default=True, help_text='Flag denoting whether job is active')),
                ('namespace', models.CharField(max_length=255)),
                ('time_limit', models.DurationField(help_text='The max duration of the job.')),
                ('trigger_children', models.BooleanField(default=False, help_text='Flag denoting whether to trigger subsequent jobs')),
                ('data_threshold', models.PositiveIntegerField(help_text='The maximum amount of data to process in the job')),
                ('created_by', models.CharField(choices=[('greg', 'greg@mobilizedconstruction.com'), ('charlotte', 'charlotte@mobilizedconstruction.com'), ('tirtha', 'tirtha@mobilizedconstruction.com'), ('anders', 'anders@mobilizedconstruction.com'), ('jens', 'jens@mobilizedconstruction.com'), ('chris', 'chris@mobilizedconstruction.com'), ('kevin', 'kevin@mobilizedconstruction.com'), ('john', 'john@mobilizedconstruction.com')], default='greg', help_text='The user who defined the job spec', max_length=20)),
                ('environment_variables', models.JSONField(default=dict, null=True)),
                ('init_photo_container', models.BooleanField(default=False, help_text='Is a init photo container needed for this job')),
                ('job_definition', models.ForeignKey(help_text='The job associated with this Job Priority', on_delete=django.db.models.deletion.CASCADE, to='api.job_definition')),
            ],
        ),
        migrations.AddField(
            model_name='batch_job',
            name='job_spec',
            field=models.ForeignKey(help_text='The job spec defining this batch job.', on_delete=django.db.models.deletion.CASCADE, to='api.job_spec'),
        ),
        migrations.AddField(
            model_name='batch',
            name='region',
            field=models.ForeignKey(help_text='Region that batch came from.', on_delete=django.db.models.deletion.CASCADE, to='api.region'),
        ),
    ]
